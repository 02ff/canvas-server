<div class="section">
  <div class="container">
    <%= form_for @order, url: paying_order_path(@order), method: :post do |f| %>
      <div class="row">
        <div class="col-12 col-lg-8">
          <!-- Billing details -->
          <h4 class="margin-bottom-20">Billing Details</h4>
          
            <div class="row">
              <div class="col-12 col-sm-6">
                <label class="required">이름</label>
                <%= f.text_field :name, required: "true" %>
                
              </div>
            </div>
            
            <div>
              <div>
                <button style="float: right;" type="button" onclick= "alert('!!');execDaumPostcode(this)">주소 찾기</button>
                <label class="required">우편번호</label>
                <%= f.text_field :zipcode, required: "true", onkeydown: "return false", onclick:"execDaumPostcode(this)" %>
              </div>
              <label>주소</label>
              
              <!-- iOS에서는 position:fixed 버그가 있음, 적용하는 사이트에 맞게 position:absolute 등을 이용하여 top,left값 조정 필요 -->
              <div id="layer" style="display:none;position:fixed;overflow:hidden;z-index:1;-webkit-overflow-scrolling:touch;">
                <img src="//t1.daumcdn.net/postcode/resource/images/close.png" id="btnCloseLayer" style="cursor:pointer;position:absolute;right:-3px;top:-3px;z-index:1" onclick="closeDaumPostcode()" alt="닫기 버튼">
              </div>
              

              <%= f.text_field :address1, required: "true", onkeydown: "return false", onclick:"execDaumPostcode(this)" %>
              <%= f.text_field :address2, required: "true", placeholder: "상세 주소" %>
            </div>
            
            <div class="row">
              <div class="col-12 col-sm-6">
                <label class="required">전화번호</label>
                <%= f.text_field :phone, required: "true" %>
              </div>
            </div>
            <div>
              <label>배송 시 요청사항(선택)</label>
              <%= f.text_area :note %>
            </div>
            <input type="hidden" name="item_total">
            <input type="hidden" name="shipment_total">
            
          <% end %>
        </div>
        
        <div class="col-12 col-lg-4">
          <div class="payment-detail-box">
            <h5 class="margin-bottom-20">주문내역</h5>
            <!-- <h6 class="heading-uppercase">Product:</h6> -->
            <ul class="payment-detail-product-list">
              <% if @order.line_items.present? %>
                <% @order.line_items.each do |line_item| %>
                  <li><%= line_item.painting.name %><span class="payment-detail-product-quantity"><%= line_item.quantity %></span><span><%= line_item.amount %></span></li>
                <% end %>
              
            </ul>
            <ul>
              <li><h6 class="heading-uppercase">가격:</h6><span><%= @payment_amount[1] %></span></li>
              <li><h6 class="heading-uppercase">배송비:</h6><span><%= @payment_amount[2] %></span></li>
              <li><h6 class="heading-uppercase">총계:</h6><span class="text-dark"><%= @payment_amount[0] %></span></li>
            </ul>
          </div>
          <button type="submit" class="button button-xl button-dark button-fullwidth">결제하기</button>
        </div>
      </div><!-- end row -->
    <% end %>
  </div><!-- end container -->
</div>
<script src="http://dmaps.daum.net/map_js_init/postcode.v2.js"></script>
<script>
  
    var element_layer = document.getElementById('layer');

    function closeDaumPostcode() {
        // iframe을 넣은 element를 안보이게 한다.
        element_layer.style.display = 'none';
    }

    function execDaumPostcode(element) {
      alert("!!")
      element.blur();
        new daum.Postcode({
            oncomplete: function(data) {
              
                // 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

                // 각 주소의 노출 규칙에 따라 주소를 조합한다.
                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                var addr = ''; // 주소 변수
                var extraAddr = ''; // 참고항목 변수

                //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
                if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
                    addr = data.roadAddress;
                } else { // 사용자가 지번 주소를 선택했을 경우(J)
                    addr = data.jibunAddress;
                }

                // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.
                if(data.userSelectedType === 'R'){
                    // 법정동명이 있을 경우 추가한다. (법정리는 제외)
                    // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
                    if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){
                        extraAddr += data.bname;
                    }
                    // 건물명이 있고, 공동주택일 경우 추가한다.
                    if(data.buildingName !== '' && data.apartment === 'Y'){
                        extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);
                    }
                    // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
                    if(extraAddr !== ''){
                        extraAddr = ' (' + extraAddr + ')';
                    }
                    // 조합된 참고항목을 해당 필드에 넣는다.
                    document.getElementById("order_address2").value = extraAddr;
                
                } else {
                    document.getElementById("order_address2").value = '';
                }

                // 우편번호와 주소 정보를 해당 필드에 넣는다.
                document.getElementById('order_zipcode').value = data.zonecode;
                document.getElementById("order_address1").value = addr;
                // 커서를 상세주소 필드로 이동한다.
                document.getElementById("order_address2").focus();

                // iframe을 넣은 element를 안보이게 한다.
                // (autoClose:false 기능을 이용한다면, 아래 코드를 제거해야 화면에서 사라지지 않는다.)
                element_layer.style.display = 'none';
            },
            width : '100%',
            height : '100%',
            maxSuggestItems : 5
        }).embed(element_layer);

        // iframe을 넣은 element를 보이게 한다.
        element_layer.style.display = 'block';
        alert(element_layer);

        // iframe을 넣은 element의 위치를 화면의 가운데로 이동시킨다.
        initLayerPosition();
    }

    // 브라우저의 크기 변경에 따라 레이어를 가운데로 이동시키고자 하실때에는
    // resize이벤트나, orientationchange이벤트를 이용하여 값이 변경될때마다 아래 함수를 실행 시켜 주시거나,
    // 직접 element_layer의 top,left값을 수정해 주시면 됩니다.
    function initLayerPosition(){
        var width = 300; //우편번호서비스가 들어갈 element의 width
        var height = 400; //우편번호서비스가 들어갈 element의 height
        var borderWidth = 5; //샘플에서 사용하는 border의 두께

        // 위에서 선언한 값들을 실제 element에 넣는다.
        element_layer.style.width = width + 'px';
        element_layer.style.height = height + 'px';
        element_layer.style.border = borderWidth + 'px solid';
        // 실행되는 순간의 화면 너비와 높이 값을 가져와서 중앙에 뜰 수 있도록 위치를 계산한다.
        element_layer.style.left = (((window.innerWidth || document.documentElement.clientWidth) - width)/2 - borderWidth) + 'px';
        element_layer.style.top = (((window.innerHeight || document.documentElement.clientHeight) - height)/2 - borderWidth) + 'px';
        console.log(element_layer);
        alert(element_layer.style.left);
        alert(element_layer.style.top);
    }
</script>